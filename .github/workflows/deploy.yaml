name: Manual Rerun

on:
  workflow_dispatch:

jobs:
  rerun:
    runs-on: self-hosted
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Show current user
        run: |
          whoami

      - name: cluster configuration
        run: |
          sudo -u ubuntu bash -c "sh setup/runner.fix"

      - name: Initialize ArgoCD
        run: |
          sudo -u ubuntu bash -c '
            kubectl apply -f k8s/namespaces.yaml
            sleep 7
            kubectl apply -f k8s/ingress.yaml
            kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
            kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj-labs/argocd-image-updater/stable/manifests/install.yaml
            kubectl wait --for=condition=available --timeout=600s deployment/argocd-server -n argocd
          '

      - name: Create AWS secret
        run: |
          sudo -u ubuntu bash -c '
            kubectl create secret generic aws-credentials \
              --from-literal=aws-access-key=${{ secrets.AWS_ACCESS_KEY_ID }} \
              --from-literal=aws-secret-key=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
              -n code-analyzer \
              --dry-run=client -o yaml | kubectl apply -f -
          '

      - name: Add microservices
        run: |
          sudo -u ubuntu bash -c '
            kubectl apply -f k8s/microservices/
          '

      - name: Expose ArgoCD
        run: |
          sudo -u ubuntu bash -c '
            kubectl patch svc argocd-server -n argocd -p '\''{"spec": {"type": "NodePort"}}'\'' --type=merge
          '